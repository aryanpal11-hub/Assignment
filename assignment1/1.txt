//Name: Aryan Pal
//Roll No.: 1024030820
//Language used: C
// Assignment 1


1)
#include <stdio.h>

int main() {
    int arr[100], n = 0, choice, i, pos, val, found = 0;

    while (1) {
        printf("\nMENU\n");
        printf("1. CREATE\n2. DISPLAY\n3. INSERT\n4. DELETE\n5. LINEAR SEARCH\n6. EXIT\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter size of array: ");
                scanf("%d", &n);
                printf("Enter elements:\n");
                for (i = 0; i < n; i++) {
                    scanf("%d", &arr[i]);
                }
                break;

            case 2:
                printf("Array elements are: ");
                for (i = 0; i < n; i++) {
                    printf("%d ", arr[i]);
                }
                break;

            case 3:
                printf("Enter position to insert (0-based): ");
                scanf("%d", &pos);
                printf("Enter value to insert: ");
                scanf("%d", &val);
                for (i = n; i > pos; i--) {
                    arr[i] = arr[i - 1];
                }
                arr[pos] = val;
                n++;
                break;

            case 4:
                printf("Enter position to delete (0-based): ");
                scanf("%d", &pos);
                for (i = pos; i < n - 1; i++) {
                    arr[i] = arr[i + 1];
                }
                n--;
                break;

            case 5:
                printf("Enter value to search: ");
                scanf("%d", &val);
                found = 0;
                for (i = 0; i < n; i++) {
                    if (arr[i] == val) {
                        printf("Found at index %d\n", i);
                        found = 1;
                        break;
                    }
                }
                if (!found) printf("Value not found.\n");
                break;

            case 6:
                printf("Exiting...\n");
                return 0;

            default:
                printf("Invalid choice! select from 1 to 6!\n");
        }
    }

    return 0;
}


2)
#include <stdio.h>

int main() {
    int arr[100], n, i, j, k;

    printf("Enter size of array: ");
    scanf("%d", &n);
    printf("Enter elements:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; ) {
            if (arr[i] == arr[j]) {
                for (k = j; k < n - 1; k++) {
                    arr[k] = arr[k + 1];
                }
                n--;
            } else {
                j++;
            }
        }
    }

    printf("Array after removing duplicates:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}


3)
10000


4)
a.
#include <stdio.h>

int main() {
    int arr[100], n, i, temp;

    printf("Enter size: ");
    scanf("%d", &n);
    printf("Enter elements:\n");
    for (i = 0; i < n; i++) scanf("%d", &arr[i]);

    for (i = 0; i < n / 2; i++) {
        temp = arr[i];
        arr[i] = arr[n - i - 1];
        arr[n - i - 1] = temp;
    }

    printf("Reversed array:\n");
    for (i = 0; i < n; i++) printf("%d ", arr[i]);

    return 0;
}

b.
#include <stdio.h>

int main() {
    int a[10][10], b[10][10], c[10][10], i, j, k, r1, c1, r2, c2;

    printf("Enter rows and cols of matrix A: ");
    scanf("%d%d", &r1, &c1);
    printf("Enter rows and cols of matrix B: ");
    scanf("%d%d", &r2, &c2);

    if (c1 != r2) {
        printf("Matrix multiplication not possible.");
        return 0;
    }

    printf("Enter elements of Matrix A:\n");
    for (i = 0; i < r1; i++)
        for (j = 0; j < c1; j++)
            scanf("%d", &a[i][j]);

    printf("Enter elements of Matrix B:\n");
    for (i = 0; i < r2; i++)
        for (j = 0; j < c2; j++)
            scanf("%d", &b[i][j]);

    for (i = 0; i < r1; i++) {
        for (j = 0; j < c2; j++) {
            c[i][j] = 0;
            for (k = 0; k < c1; k++) {
                c[i][j] += a[i][k] * b[k][j];
            }
        }
    }

    printf("Resultant Matrix:\n");
    for (i = 0; i < r1; i++) {
        for (j = 0; j < c2; j++)
            printf("%d ", c[i][j]);
        printf("\n");
    }

    return 0;
}

c.
#include <stdio.h>

int main() {
    int mat[10][10], trans[10][10], i, j, r, c;

    printf("Enter rows and columns: ");
    scanf("%d%d", &r, &c);

    printf("Enter matrix:\n");
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &mat[i][j]);

    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            trans[j][i] = mat[i][j];

    printf("Transpose:\n");
    for (i = 0; i < c; i++) {
        for (j = 0; j < r; j++)
            printf("%d ", trans[i][j]);
        printf("\n");
    }

    return 0;
}


5)
#include <stdio.h>

int main() {
    int mat[10][10], r, c, i, j, rowSum, colSum;

    printf("Enter rows and columns: ");
    scanf("%d%d", &r, &c);

    printf("Enter matrix elements:\n");
    for (i = 0; i < r; i++)
        for (j = 0; j < c; j++)
            scanf("%d", &mat[i][j]);

    printf("Row-wise Sum:\n");
    for (i = 0; i < r; i++) {
        rowSum = 0;
        for (j = 0; j < c; j++)
            rowSum += mat[i][j];
        printf("Row %d: %d\n", i, rowSum);
    }

    printf("Column-wise Sum:\n");
    for (j = 0; j < c; j++) {
        colSum = 0;
        for (i = 0; i < r; i++)
            colSum += mat[i][j];
        printf("Column %d: %d\n", j, colSum);
    }

    return 0;
}